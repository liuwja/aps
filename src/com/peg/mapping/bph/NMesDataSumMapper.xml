<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peg.dao.bph.NMesDataSumMapper" >
  <resultMap id="BaseResultMap" type="com.peg.model.bph.MesDataSum" >
    <result column="FACTORY" property="factory" jdbcType="VARCHAR" />
    <result column="AREAS" property="areas" jdbcType="VARCHAR" />
    <result column="SHIFT_GROUP" property="shiftGroup" jdbcType="VARCHAR" />
    <result column="MONTHLY" property="monthly" jdbcType="VARCHAR" />
    <result column="RETURN_NUM" property="returnNum" jdbcType="DECIMAL" />
    <result column="COMMIT_NUM" property="commitNum" jdbcType="DECIMAL" />
    <result column="DEFECT_QTY" property="defectQty" jdbcType="DECIMAL" />
    <result column="TOTAL_QTY" property="totalQty" jdbcType="DECIMAL" />
    <result column="SIMPLE_QTY" property="simplelQty" jdbcType="DECIMAL" />
    <result column="QUALITY_QTY" property="qualityQty" jdbcType="DECIMAL" />
    <result column="AUDIT_NUM" property="auditNum" jdbcType="DECIMAL" />
    <result column="TOTAL_SCORE" property="totalScore" jdbcType="DECIMAL" />
    <result column="DEFECT_SOURCE" property="defectSource" jdbcType="VARCHAR" />
    <result column="DEFECT_NUM" property="defectNum" jdbcType="DECIMAL" />
    <result column="SHIFT_GROUP_CODE" property="shiftGroupCode" jdbcType="DECIMAL" />
    <result column="SHIFT_GROUP_NAME" property="shiftGroupName" jdbcType="VARCHAR" />
    <result column="SUM_DATE" property="sumDate" jdbcType="TIMESTAMP" />
    <result column="INSERT_TIME" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="LAST_UPDATE_TIME" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="NEED_SUM" property="needSum" jdbcType="DECIMAL" />
    <result column="GROUP_TYPE" property="groupType" jdbcType="VARCHAR" />
    <result column="COL_1" property="col1" jdbcType="DECIMAL" />
    <result column="COL_2" property="col2" jdbcType="DECIMAL" />
    <result column="COL_3" property="col3" jdbcType="DECIMAL" />
    <result column="COL_4" property="col4" jdbcType="DECIMAL" />
    <result column="COL_5" property="col5" jdbcType="DECIMAL" />
    <result column="COL_6" property="col6" jdbcType="DECIMAL" />
    <result column="COL_7" property="col7" jdbcType="DECIMAL" />
    <result column="COL_8" property="col8" jdbcType="DECIMAL" />
    <result column="COL_9" property="col9" jdbcType="DECIMAL" />
    <result column="COL_10" property="col10" jdbcType="DECIMAL" />
    <result column="COL_11" property="col11" jdbcType="DECIMAL" />
    <result column="COL_12" property="col12" jdbcType="DECIMAL" />
    <result column="COL_13" property="col13" jdbcType="DECIMAL" />
    <result column="COL_14" property="col14" jdbcType="VARCHAR" />
    <result column="COL_15" property="col15" jdbcType="DECIMAL" />
    <result column="COL_16" property="col16" jdbcType="DECIMAL" />
    <result column="COL_17" property="col17" jdbcType="DECIMAL" />
    <result column="COL_18" property="col18" jdbcType="DECIMAL" />
    <result column="COL_19" property="col19" jdbcType="DECIMAL" />
    <result column="COL_20" property="col20" jdbcType="DECIMAL" />
    <result column="COL_21" property="col21" jdbcType="DECIMAL" />
    <result column="COL_22" property="col22" jdbcType="DECIMAL" />
    <result column="COL_23" property="col23" jdbcType="DECIMAL" />
    <result column="COL_24" property="col24" jdbcType="VARCHAR" />
     <result column="COL_25" property="col25" jdbcType="DECIMAL" />
    <result column="COL_26" property="col26" jdbcType="DECIMAL" />
    <result column="COL_27" property="col27" jdbcType="DECIMAL" />
    <result column="COL_28" property="col28" jdbcType="DECIMAL" />
    <result column="COL_29" property="col29" jdbcType="DECIMAL" />
    <result column="COL_30" property="col30" jdbcType="DECIMAL" />
    <result column="COL_31" property="col31" jdbcType="DECIMAL" />
    <result column="COL_32" property="col32" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
     FACTORY, AREAS, SHIFT_GROUP, MONTHLY, RETURN_NUM, COMMIT_NUM,DEFECT_QTY,TOTAL_QTY,SIMPLE_QTY,QUALITY_QTY,AUDIT_NUM,
     TOTAL_SCORE,DEFECT_SOURCE,DEFECT_NUM,SHIFT_GROUP_CODE,SHIFT_GROUP_NAME,SUM_DATE,INSERT_TIME,LAST_UPDATE_TIME,NEED_SUM,GROUP_TYPE,
     COL_1,COL_2,COL_3,COL_4,COL_5,COL_6,COL_7,COL_8,COL_9,COL_10,COL_11,COL_12,COL_13,COL_14,COL_15,COL_16,COL_17,
     COL_18,COL_19,COL_20,COL_21,COL_22,COL_23,col_24,COL_25,COL_26,COL_27,COL_28,COL_29,COL_30,COL_31,COL_32
  </sql>
  
<select id="findAllByPage" resultMap="BaseResultMap">
  select 
   FACTORY, AREA as areas,SHIFT_GROUP_CODE,SHIFT_GROUP_NAME,SUM_DATE,GROUP_TYPE,
   COL_1,COL_2,COL_3,COL_4,COL_5,COL_6,COL_7,COL_8,COL_9,COL_10,COL_11,
   COL_12,COL_13,COL_14,COL_15,COL_16,COL_17,
   COL_18,COL_19,COL_20,COL_21,COL_22,COL_23,col_24,
   COL_25,COL_26,COL_27,COL_28,COL_29,COL_30,COL_31,COL_32
  from t_mes_data_sum_month
  where 1=1
  <if test="hashMap.factory !=null">
   and  FACTORY like '%${hashMap.factory}%'
  </if>
  <if test="hashMap.area != null">
  and area like '%${hashMap.area}%'
  </if>
  <if test="hashMap.shiftGroup != null">
  and SHIFT_GROUP_NAME like '%${hashMap.shiftGroup}%'
  </if>
  <if test="hashMap.monthly != null">
  and to_char(SUM_DATE,'yyyy-mm') = #{hashMap.monthly}
  </if>
  order by factory,area,  SUM_DATE  desc
</select> 


  
  <!-- 插入qms_data_month表 -->
  <insert id="insertQmsdataMonth" parameterType="com.peg.model.bph.MesDataSum">
    insert into t_qms_data_month(factory_name,working_date,area_name,group_name,assemble_defect_qty,downline_qty,
    stamping_finish_qty,painting_qty,assemble_finish_qty,assemble_produce_qty,ipqc_total_qty,
    ipqc_defect_qty)  
    select factory_name,working_date,area_name,group_name,sum(assemble_defect_qty),sum(downline_qty) ,
    sum(stamping_finish_qty) ,sum(painting_qty) ,sum(assemble_finish_qty) ,sum(assemble_produce_qty) ,sum(ipqc_total_qty),
    sum(ipqc_defect_qty) from(
    select factory_name,substr(#{param2},0,7) working_date,area_name,group_name,sum(assemble_defect_qty) assemble_defect_qty,sum(downline_qty) downline_qty ,
    sum(stamping_finish_qty) stamping_finish_qty ,sum(painting_qty) painting_qty,sum(assemble_finish_qty) assemble_finish_qty,sum(assemble_produce_qty) assemble_produce_qty,sum(ipqc_total_qty) ipqc_total_qty,
    sum(ipqc_defect_qty) ipqc_defect_qty from qms_data
    <where>
        <if test="param1 != null and param2 !=null">
        <![CDATA[
             working_date BETWEEN TO_Date(#{param1},'yyyy-MM-DD') and  TO_Date(#{param2},'yyyy-MM-DD')
         ]]>
       </if>
   </where>

   group by factory_name,substr(#{param2},0,7),area_name,group_name
    )
    group by factory_name,working_date,area_name,group_name
  </insert>
   <delete id="deleteQmsdataMonth" parameterType="com.peg.model.bph.MesDataSum" >
    delete from  t_qms_data_month  trd
    where 1=1 
    <if test="queryMonth != null" >
    and trd.working_date = #{queryMonth} 
    </if>
  </delete>
  
   <!-- 插入MES数据总和表月份 -->
    <delete id="deleteMesDataSumMonth" parameterType="com.peg.model.bph.MesDataSum" >
    delete from T_MES_DATA_SUM_MONTH tdtr
    where 1=1 
    <if test="queryMonth != null" >
    and tdtr.sum_date = TO_DATE(#{queryMonth},'YYYY-MM') 
    </if>
  </delete>
  <insert id="insertMesDataSumMonth" parameterType="com.peg.model.bph.MesDataSum" >    
     insert into  T_MES_DATA_SUM_MONTH ( FACTORY, AREA,SHIFT_GROUP_CODE, 
     SHIFT_GROUP_NAME,GROUP_TYPE,SUM_DATE,INSERT_TIME)
   select UDA_1,UDA_2,GROUP_NAME,DESCRIPTION,UDA_4,TO_DATE(#{queryMonth},'YYYY-MM') MONTHLY,SYSDATE
   from (
   select  UDA_1,UDA_2,GROUP_NAME,DESCRIPTION,UDA_4
   from  APP_GROUP where category='SHIFT' and UDA_1 is not null and UDA_2 is not null         
  )
  </insert>

  <!-- 更新MES数据总和表月份 生产退次表-->
  <update id="updateMesDataSumMonthAssembly" >
     update T_MES_DATA_SUM_MONTH sm set ( col_1 ) =  (
     select  return_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s ='组装'
   
    group by FACTORY_S,DUTY_GROUP1_S,substr(#{endDay},0,7)

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s ='组装'
           
   group by FACTORY_S,DUTY_GROUP2_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s ='组装'

   group by FACTORY_S,DUTY_GROUP3_S,substr(#{endDay},0,7)
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth}
      ) 
     where exists(
     select  return_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s ='组装'
   
    group by FACTORY_S,DUTY_GROUP1_S,substr(#{endDay},0,7)

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s ='组装'
           
   group by FACTORY_S,DUTY_GROUP2_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s ='组装'

   group by FACTORY_S,DUTY_GROUP3_S,substr(#{endDay},0,7)
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth}
     )
   
  </update>
   <!-- 喷涂退次表 -->
   <update id="updateMesDataSumMonthPaintingProduct" >
      update T_MES_DATA_SUM_MONTH sm set ( col_15,col_23 ) =  (
     select  return_num,total_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num,sum(total_qty) total_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s = '喷涂'
   
    group by FACTORY_S,DUTY_GROUP1_S,substr(#{endDay},0,7)

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s = '喷涂'
           
   group by FACTORY_S,DUTY_GROUP2_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s = '喷涂'

   group by FACTORY_S,DUTY_GROUP3_S,substr(#{endDay},0,7)
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month =  #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =   #{queryMonth}
      ) 
     where exists(
      select  return_num,total_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num,sum(total_qty) total_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s = '喷涂'
   
    group by FACTORY_S,DUTY_GROUP1_S,substr(#{endDay},0,7)

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s = '喷涂'
           
   group by FACTORY_S,DUTY_GROUP2_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s = '喷涂'

   group by FACTORY_S,DUTY_GROUP3_S,substr(#{endDay},0,7)
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month =  #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =   #{queryMonth}
     )
   
   
  </update>
  <!-- FQC巡检表 -->
  <update id="updateMesDataSumMonthFormer" >
   update T_MES_DATA_SUM_MONTH sm set ( col_3 ,col_4) =  (
 select  defect_qty ,simple_qty  from (
   select FACTORY_S, group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(SIMPLE_QTY) simple_qty
   from (
   select FACTORY_S,GROUP1_S group_s,substr(#{endDay},0,7) stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
     
   group by FACTORY_S,GROUP1_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,GROUP2_S group_s,substr(#{endDay},0,7) stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
  
   group by FACTORY_S,GROUP2_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,GROUP3_S group_s,substr(#{endDay},0,7) stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK  
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
 
   group by FACTORY_S,GROUP3_S,substr(#{endDay},0,7)
   
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month =#{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} ) 
     where exists(
     select  defect_qty ,simple_qty  from (
   select FACTORY_S, group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(SIMPLE_QTY) simple_qty
   from (
   select FACTORY_S,GROUP1_S group_s,substr(#{endDay},0,7) stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
     
   group by FACTORY_S,GROUP1_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,GROUP2_S group_s,substr(#{endDay},0,7) stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
  
   group by FACTORY_S,GROUP2_S,substr(#{endDay},0,7)

   union all

   select FACTORY_S,GROUP3_S group_s,substr(#{endDay},0,7) stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK  
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
 
   group by FACTORY_S,GROUP3_S,substr(#{endDay},0,7)
   
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month =#{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth}
     )
  
  </update>
  <!-- 过程审核表 -->
   <update id="updateMesDataSumMonthProcess" >
   update T_MES_DATA_SUM_MONTH sm set ( col_27 ,col_28,col_29 ,col_30,col_31 ,col_32) =  (
   select  check_type_A ,check_type_B,check_type_C,check_type_D,check_type_E,check_type_F  
   from (
  select FACTORY_S,group_s,substr(#{endDay},0,7) stat_month , 
  sum( case when instr(check_type_s,'公司外审') >0 then 1 end) check_type_A,
  sum( case when instr(check_type_s,'公司内审') >0 then 1 end) check_type_B,
  sum( case when instr(check_type_s,'系统内审') >0 then 1 end) check_type_C,
  sum( case when instr(check_type_s,'巡检5M1E') >0 then 1 end) check_type_D,
  sum( case when instr(check_type_s,'工艺纪律检查') >0 then 1 end) check_type_E,
  sum( case when instr(check_type_s,'盲点测试') >0 then 1 end) check_type_F
   from  AT_PROCESSAUDITRECORD
  where CHECK_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
  group by FACTORY_S,GROUP_S,substr(#{endDay},0,7)
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} ) 
     where exists(
      select  check_type_A ,check_type_B,check_type_C,check_type_D,check_type_E,check_type_F  
   from (
  select FACTORY_S,group_s,substr(#{endDay},0,7) stat_month , 
  sum( case when instr(check_type_s,'公司外审') >0 then 1 end) check_type_A,
  sum( case when instr(check_type_s,'公司内审') >0 then 1 end) check_type_B,
  sum( case when instr(check_type_s,'系统内审') >0 then 1 end) check_type_C,
  sum( case when instr(check_type_s,'巡检5M1E') >0 then 1 end) check_type_D,
  sum( case when instr(check_type_s,'工艺纪律检查') >0 then 1 end) check_type_E,
  sum( case when instr(check_type_s,'盲点测试') >0 then 1 end) check_type_F
   from  AT_PROCESSAUDITRECORD
  where CHECK_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
  group by FACTORY_S,GROUP_S,substr(#{endDay},0,7)
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} 
     )
  </update>
  <!-- 质量改善表 -->
  <update id="updateMesDataSumMonthQuality">
    update T_MES_DATA_SUM_MONTH sm set ( col_9  ) =  (
 select  total_score  from (
 select FACTORY_S,duty_group_s, stat_month,sum(total_score) total_score
   from (
   select FACTORY_S, duty_group_s,substr(#{endDay},0,7) stat_month ,sum(total_score_I) total_score
   from  AT_QUALITYIMPROVEMENTRFP
     where
             RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,duty_group_s,substr(#{endDay},0,7)

  )where duty_group_s is not null
  group by FACTORY_S,duty_group_s,stat_month  
 ) a 
     where a.duty_group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month= #{queryMonth}
      and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} ) 
     where exists(
     select  total_score  from (
 select FACTORY_S,duty_group_s, stat_month,sum(total_score) total_score
   from (
   select FACTORY_S, duty_group_s,substr(#{endDay},0,7) stat_month ,sum(total_score_I) total_score
   from  AT_QUALITYIMPROVEMENTRFP
     where
             RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,duty_group_s,substr(#{endDay},0,7)

  )where duty_group_s is not null
  group by FACTORY_S,duty_group_s,stat_month  
 ) a 
     where a.duty_group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month= #{queryMonth}
      and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} 
     )
  </update>
  <!-- 5M1E不良记录表 -->
  <update id="updateMesDataSumMonthBatch" >
   update T_MES_DATA_SUM_MONTH sm set ( col_25 ,col_26) =  (select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),substr(#{endDay},0,7)
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,substr(#{endDay},0,7)
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,substr(#{endDay},0,7)
    ) group by FACTORY_S, group_s, stat_month
   ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} ) 
  where exists(
     select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),substr(#{endDay},0,7)
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,substr(#{endDay},0,7)
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,substr(#{endDay},0,7)
    ) group by FACTORY_S, group_s, stat_month
   ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth}
     )
  
  </update>
  
    <!-- 5M1E不良记录表(IQC) -->
  <update id="updateMesDataSumMonthBatchForIqc" >
   update T_MES_DATA_SUM_MONTH sm set ( col_25 ,col_26) =  (select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in ('外协')  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in ('外协')  
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),substr(#{endDay},0,7)
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in  ('外协')
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and a.group2_s in  ('外协')
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,substr(#{endDay},0,7)
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,substr(#{endDay},0,7) stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in ('外协') 
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and a.group3_s in ('外协') 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,substr(#{endDay},0,7)
    ) group by FACTORY_S, group_s, stat_month
   ) a where a.group_s='外协'  and a.FACTORY_S = sm.factory
   ) 
     where sm.shift_group_name in ( select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('IQC')) 
             and to_char(sm.sum_date,'YYYY-MM') =#{queryMonth}
  
  </update>
  <!-- 冲压质量日报表 -->
  <update id="updateMesDataSumMonthStmp">
   update T_MES_DATA_SUM_MONTH sm set ( col_10,col_11 ) =  (select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s ='冲压'

   group by FACTORY_S,group_s,substr(#{endDay},0,7)

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} )  
     where exists(
     select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s ='冲压'

   group by FACTORY_S,group_s,substr(#{endDay},0,7)

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} 
     )
  </update>
  
   <!-- 精加工直通率 -->
  <update id="updateMesDataSumMonthFinishing">
   update T_MES_DATA_SUM_MONTH sm set ( col_21,col_22 ) =  (select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s='精加工'

   group by FACTORY_S,group_s,substr(#{endDay},0,7)

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} )  
     where exists(
     select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,substr(#{endDay},0,7) stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s='精加工'

   group by FACTORY_S,group_s,substr(#{endDay},0,7)

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} 
     )
  </update>
  
  <!-- 喷涂质量日报表 -->
   <update id="updateMesDataSumMonthPaint" >

 update T_MES_DATA_SUM_MONTH sm set ( col_12,col_13 ) =  (select  quality_qty,total_qty  from  
(
   select FACTORY_S,group_s, stat_month,sum(QUALITY_QTY) QUALITY_QTY,sum(total_qty) total_qty
   from (
   select FACTORY_S, group_s,substr(#{endDay},0,7) stat_month ,sum(QUALITY_QTY_I) QUALITY_QTY,sum(total_qty_i)total_qty
   from  AT_PAINTINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
 
   group by FACTORY_S,group_s,substr(#{endDay},0,7)

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
) a 
     where a.group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} ) 
     where exists(
     select  quality_qty,total_qty  from  
(
   select FACTORY_S,group_s, stat_month,sum(QUALITY_QTY) QUALITY_QTY,sum(total_qty) total_qty
   from (
   select FACTORY_S, group_s,substr(#{endDay},0,7) stat_month ,sum(QUALITY_QTY_I) QUALITY_QTY,sum(total_qty_i)total_qty
   from  AT_PAINTINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
 
   group by FACTORY_S,group_s,substr(#{endDay},0,7)

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
) a 
     where a.group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =  #{queryMonth} 
     )
   
  </update>
  <!-- 市场开箱不良记录表 -->
   <update id="updateMesDataSumMonthBox">
    update T_MES_DATA_SUM_MONTH sm set ( col_19 ,col_20) =  (
   select  open_box_num ,fashion_num
   from (
   select FACTORY_S,group_s,stat_month,sum(open_box_num)open_box_num,sum(fashion_num) fashion_num from(
   select FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1) group_s,substr(#{endDay},0,7) stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1),substr(#{endDay},0,7)
   
   union all     
    select FACTORY_S,group2_s group_s,substr(#{endDay},0,7) stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group2_s,substr(#{endDay},0,7)
 
   union all
    select FACTORY_S,group3_s group_s,substr(#{endDay},0,7) stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group3_s,substr(#{endDay},0,7)
   ) group by FACTORY_S,group_s,stat_month
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =   #{queryMonth} ) 
     where exists(
      select  open_box_num ,fashion_num
   from (
   select FACTORY_S,group_s,stat_month,sum(open_box_num)open_box_num,sum(fashion_num) fashion_num from(
   select FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1) group_s,substr(#{endDay},0,7) stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1),substr(#{endDay},0,7)
   
   union all     
    select FACTORY_S,group2_s group_s,substr(#{endDay},0,7) stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group2_s,substr(#{endDay},0,7)
 
   union all
    select FACTORY_S,group3_s group_s,substr(#{endDay},0,7) stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group3_s,substr(#{endDay},0,7)
   ) group by FACTORY_S,group_s,stat_month
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = #{queryMonth}
     and to_char(sm.sum_date,'YYYY-MM') =   #{queryMonth}
     )
  </update>
  <!-- IPQC巡检表 -->
  <update id="updateMesDataSumMonthInspects" >
   update  T_MES_DATA_SUM_MONTH sm set (col_5,col_6,col_7,col_8) = ( 
    select DEFECT_QTY,CHECK_QTY,risk_score_A,risk_score_D from (
    select FACTORY_S, group_s, stat_month, sum(risk_score_A) risk_score_A, sum(risk_score_D) risk_score_D,
    sum(CHECK_QTY) CHECK_QTY, sum(DEFECT_QTY) DEFECT_QTY from (
    select FACTORY_S,group1_s group_s,substr(#{endDay},0,7) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
  where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
   
   group by FACTORY_S,group1_s,substr(#{endDay},0,7)

   union all

    select FACTORY_S,group2_s group_s,substr(#{endDay},0,7) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
   where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'

   group by FACTORY_S,group2_s,substr(#{endDay},0,7) 

   union all

   select FACTORY_S,group3_s group_s,substr(#{endDay},0,7) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
    where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
    
   group by FACTORY_S,group3_s,substr(#{endDay},0,7)
   ) group by FACTORY_S,group_s, stat_month
   ) a
      where a.FACTORY_S = sm.factory and a.group_s = sm.shift_group_name and a.stat_month= #{queryMonth}
      and to_char(sm.sum_date,'YYYY-MM') = #{queryMonth}   )
    where exists(
     select DEFECT_QTY,CHECK_QTY,risk_score_A,risk_score_D from (
    select FACTORY_S, group_s, stat_month, sum(risk_score_A) risk_score_A, sum(risk_score_D) risk_score_D,
    sum(CHECK_QTY) CHECK_QTY, sum(DEFECT_QTY) DEFECT_QTY from (
    select FACTORY_S,group1_s group_s,substr(#{endDay},0,7) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
  where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
   
   group by FACTORY_S,group1_s,substr(#{endDay},0,7)

   union all

    select FACTORY_S,group2_s group_s,substr(#{endDay},0,7) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
   where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'

   group by FACTORY_S,group2_s,substr(#{endDay},0,7) 

   union all

   select FACTORY_S,group3_s group_s,substr(#{endDay},0,7) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
    where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
    
   group by FACTORY_S,group3_s,substr(#{endDay},0,7)
   ) group by FACTORY_S,group_s, stat_month
   ) a
      where a.FACTORY_S = sm.factory and a.group_s = sm.shift_group_name and a.stat_month= #{queryMonth}
      and to_char(sm.sum_date,'YYYY-MM') = #{queryMonth} 
    )
  
  </update>
  
   <!-- 从qms_data_month更新MES总和表月度组装投产数-->
   <update id="updateMesDataSumMonthQmsData" parameterType="com.peg.model.bph.MesDataSum">
     update T_MES_DATA_SUM_MONTH sm set ( col_2  )
  =  (select  assemble_produce_qty from t_qms_data_month a 
  where a.group_name = sm.shift_group_name  and a.factory_name = sm.factory
  and a.area_name = sm.area  and a.working_date = #{queryMonth} and to_char(sm.sum_date,'YYYY-MM') =#{queryMonth}  )
  where  to_char(sm.sum_date,'YYYY-MM') =#{queryMonth}
  </update>
   <!-- 从qms_data_month更新MES总和表月度组装投产数_电器冲压 -->
   <update id="updateMesDataSumMonthQmsAssDStamp" parameterType="com.peg.model.bph.MesDataSum">
     update  t_mes_data_sum_month sm set(col_2)=(select sum(assemble_produce_qty) from t_qms_data_month a where a.factory_name='电器一厂' and
     a.area_name='组装车间' and instr(group_name,'油烟机')>0  and working_date=#{queryMonth}
     )where sm.shift_group_code in(
     select a.group_name from app_group a where a.category='SHIFT' 
     and a.uda_4 in('冲压班组','喷涂班组','精加工班组','点焊班组','部装班组')
     and a.uda_1 ='电器一厂'
     ) and to_char(sm.sum_date,'YYYY-MM')=#{queryMonth}
   </update>
    <!-- 从qms_data_month更新MES总和表月度组装投产数_电脑版车间 -->
   <update id="updateMesDataSumMonthQmsAssDComputer" parameterType="com.peg.model.bph.MesDataSum">
     update  t_mes_data_sum_month sm set(col_2)=(select sum(assemble_produce_qty) from t_qms_data_month a where a.factory_name='电器一厂' and
     a.area_name='组装车间' and instr(group_name,'消毒柜')>0  and working_date=#{queryMonth}
     )where sm.shift_group_code in(
     select a.group_name from app_group a where a.category='SHIFT' 
     and a.uda_4 in('电脑板车间')
     and a.uda_1 ='电器一厂'
     ) and to_char(sm.sum_date,'YYYY-MM')=#{queryMonth}
   </update>
   <!-- 燃气冲压A -->
   <update id="updateMesDataSumMonthQmsAssRStampA" parameterType="com.peg.model.bph.MesDataSum">
    update  t_mes_data_sum_month sm set(col_2)=(select sum(assemble_produce_qty) from t_qms_data_month a where a.factory_name='燃气工厂' and
     a.area_name='组装车间' and a.group_name in('L50A组','L51A组')  and working_date=#{queryMonth}
    )where sm.shift_group_code in('RCY01') and to_char(sm.sum_date,'YYYY-MM')=#{queryMonth}
   </update>
    <!-- 燃气冲压B -->
   <update id="updateMesDataSumMonthQmsAssRStampB" parameterType="com.peg.model.bph.MesDataSum">
      update  t_mes_data_sum_month sm set(col_2)=(select sum(assemble_produce_qty) from t_qms_data_month a where a.factory_name='燃气工厂' and
      a.area_name='组装车间'  and a.group_name in('L40A组', 'L41A组','L42A组', 'L43A组', 'L44A组')  and working_date=#{queryMonth}
      )where sm.shift_group_code in('RCY02') and to_char(sm.sum_date,'YYYY-MM')=#{queryMonth}
   </update>
    <!-- 燃气喷涂,点焊 -->
   <update id="updateMesDataSumMonthQmsAssRSpay" parameterType="com.peg.model.bph.MesDataSum">
       update  t_mes_data_sum_month sm set(col_2)=(select sum(assemble_produce_qty) from t_qms_data_month a where a.factory_name='燃气工厂' and
       a.area_name='组装车间' and a.group_name in('L40A组', 'L41A组','L42A组', 'L43A组', 'L44A组','L50A组','L51A组')   and working_date=#{queryMonth}
       )where sm.shift_group_code in(
        select a.group_name from app_group a where a.category='SHIFT' 
        and a.uda_4 in('喷涂班组','精加工班组','点焊班组')
        and a.uda_1 ='燃气工厂'
       ) and to_char(sm.sum_date,'YYYY-MM')=#{queryMonth}
   </update>


  
  <select id="getMesDataAll"  resultMap="BaseResultMap" parameterType="com.peg.model.bph.MesDataSum">
      select FACTORY, AREA as AREAS, SHIFT_GROUP_CODE,SHIFT_GROUP_NAME,SUM_DATE,INSERT_TIME,LAST_UPDATE_TIME,NEED_SUM,GROUP_TYPE,
     COL_1,COL_2,COL_3,COL_4,COL_5,COL_6,COL_7,COL_8,COL_9,COL_10,COL_11,COL_12,COL_13,COL_14,COL_15,COL_16,COL_17,
     COL_18,COL_19,COL_20,COL_21,COL_22,COL_23,col_24,COL_25,COL_26,COL_27,COL_28,COL_29,COL_30,COL_31,COL_32 from T_MES_DATA_SUM_MONTH 
     <where>
          <if test="startTime != null and endTime !=null">
        <![CDATA[
             sum_date BETWEEN TO_Date(#{startTime},'yyyy-MM-DD') and  TO_Date(#{endTime},'yyyy-MM-DD')
         ]]>
       </if>
     </where>
  </select>
 

  <!-- 删除指标得分月 -->
  <delete id="deleteIndexScoreMonth" parameterType="com.peg.model.bph.MesDataSum" >
    delete from  t_item_index_scroe_month  trd
    where 1=1 
    <if test="queryMonth != null" >
    and trd.sum_date = to_date(#{queryMonth},'YYYY-MM') 
    </if>
  </delete>
  
    <!-- 删除项目得分月 -->
  <delete id="deleteItemScoreMonth" parameterType="com.peg.model.bph.MesDataSum" >
    delete from  t_item_scroe  trd
    where 1=1 
    <if test="queryMonth != null" >
    and trd.sum_date = to_date(#{queryMonth},'YYYY-MM') 
    </if>
  </delete>
 

  
  
    <!-- 更新MES总和表月组装维修数 
    <update id="updateMesDataSumMonthAssRepaired" >
	  update  T_MES_DATA_SUM_MONTH sm set (col_18) = ( 
	  select repaired_num from (
	  select 
	  w.addr_city factory,       
	  ag.description group_name, 
	  substr(#{endDay},0,7) stat_month,
	  count(u.serial_number) repaired_num          
	  from  defect_repair_entry d,
	  test_instance t,
	  unit u,
	  work_order w,
	  work_order_items woi,
	  app_group ag
	   where 1=1 
            and d.test_instance_key=t.test_instance_key  
            and t.object_key=u.unit_key 
            and u.order_item_key=woi.order_item_key
            and w.order_key = woi.order_key
            and woi.uda_1=ag.description
            and t.location='在线检验' 
            and t.test_valid='1'
            and d.defect_user_name='组装车间'
            and to_char(d.udt_1,'yyyy-mm-dd') between #{startDay} and #{endDay} 
   group by w.addr_city, ag.description,substr(#{endDay},0,7)
    ) a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month= #{queryMonth}
      and to_char(sm.sum_date,'YYYY-MM') = #{queryMonth}   )
     where  exists(
      select repaired_num from (
	  select 
	  w.addr_city factory,       
	  ag.description group_name, 
	  substr(#{endDay},0,7) stat_month,
	  count(u.serial_number) repaired_num          
	  from  defect_repair_entry d,
	  test_instance t,
	  unit u,
	  work_order w,
	  work_order_items woi,
	  app_group ag
	   where 1=1 
            and d.test_instance_key=t.test_instance_key  
            and t.object_key=u.unit_key 
            and u.order_item_key=woi.order_item_key
            and w.order_key = woi.order_key
            and woi.uda_1=ag.description
            and t.location='在线检验' 
            and t.test_valid='1'
            and d.defect_user_name='组装车间'
            and to_char(d.udt_1,'yyyy-mm-dd') between #{startDay} and #{endDay} 
   group by w.addr_city, ag.description,substr(#{endDay},0,7)
    ) a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month= #{queryMonth}
      and to_char(sm.sum_date,'YYYY-MM') = #{queryMonth} 
     )
    
    </update>
    -->
   <!-- 更新MES总和表月组装维修数 -->
    <update id="updateMesDataSumMonthAssRepaired" statementType="CALLABLE">
     <![CDATA[  
          {call repaired_num_month_proce(#{startDay,mode=IN,jdbcType=VARCHAR},#{endDay,mode=IN,jdbcType=VARCHAR})}  
        ]]>  
    </update>
    
  <!-- 插入OQC抽检表月 -->
  <insert id="insertOqcCheckSum" >
   insert into AT_OQCCHECK_SUM(factory,shift_group,monthly,defect_num) 
  select  a.factory,a.group_name ,a.stat_month,a.defect_num from 
 (
  select p.uda_1 factory, substr(#{endDay},0,7) stat_month, substr(t.uda_5,0,instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num  
   from  test_instance t,app_group p
   where 1=1
             and substr(t.uda_5,0,instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}
             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, substr(#{endDay},0,7), substr(t.uda_5,0,instr(t.uda_5||',',',')-1)
   
   union all
   
   select  p.uda_1 factory, substr(#{endDay},0,7) stat_month,substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num 
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}

             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by p.uda_1, substr(#{endDay},0,7),substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1)
   
   union all
   
      select p.uda_1 factory, substr(#{endDay},0,7) stat_month,substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1) group_name,
   count(t.test_instance_key) defect_num
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)= p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}

             and  t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, substr(#{endDay},0,7),substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)
 ) a
  
  </insert>
  <delete id="deleteOqcCheckSum" parameterType="com.peg.model.bph.MesDataSum" >
    delete from AT_OQCCHECK_SUM  trd
    where 1=1 
    <if test="queryMonth != null" >
    and trd.monthly = #{queryMonth} 
    </if>
  </delete>

  
   <!-- 更新MES总和表月OQC抽检不良台数 
    <update id="updateMesDataSumMonthOqcDedectQty" parameterType="com.peg.model.bph.MesDataSum">
         update  T_MES_DATA_SUM_MONTH sm set (col_16) = ( 
      select defect_num from (
       select p.uda_1 factory, substr(#{endDay},0,7) stat_month, substr(t.uda_5,0,instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num  
   from  test_instance t,app_group p
   where 1=1
             and substr(t.uda_5,0,instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}
             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, substr(#{endDay},0,7), substr(t.uda_5,0,instr(t.uda_5||',',',')-1)
   
   union all
   
   select  p.uda_1 factory, substr(#{endDay},0,7) stat_month,substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num 
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}

             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by p.uda_1, substr(#{endDay},0,7),substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1)
   
   union all
   
      select p.uda_1 factory, substr(#{endDay},0,7) stat_month,substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1) group_name,
   count(t.test_instance_key) defect_num
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)= p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}

             and  t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, substr(#{endDay},0,7),substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)
      )a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month=  to_char(sm.sum_date,'YYYY-MM') )
      where exists(
      select defect_num from (
       select p.uda_1 factory, substr(#{endDay},0,7) stat_month, substr(t.uda_5,0,instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num  
   from  test_instance t,app_group p
   where 1=1
             and substr(t.uda_5,0,instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}
             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, substr(#{endDay},0,7), substr(t.uda_5,0,instr(t.uda_5||',',',')-1)
   
   union all
   
   select  p.uda_1 factory, substr(#{endDay},0,7) stat_month,substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num 
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}

             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by p.uda_1, substr(#{endDay},0,7),substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1)
   
   union all
   
      select p.uda_1 factory, substr(#{endDay},0,7) stat_month,substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1) group_name,
   count(t.test_instance_key) defect_num
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)= p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay} and #{endDay}

             and  t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, substr(#{endDay},0,7),substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)
      )a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month=  to_char(sm.sum_date,'YYYY-MM')
      )
    </update>
    -->
    <!-- 更新MES总和表月OQC抽检不良台数  -->
    <update id="updateMesDataSumMonthOqcDedectQty" statementType="CALLABLE">
     <![CDATA[  
          {call oqcdefect_num_month_proce(#{startDay,mode=IN,jdbcType=VARCHAR},#{endDay,mode=IN,jdbcType=VARCHAR})}  
        ]]>  
    </update>
    
    <!-- 更新MES总和表月组装停线次数 (燃气IQC班组A)-->
    <update id="updateMesDataSumMonthDownQtyRiqcA" parameterType="com.peg.model.bph.MesDataSum">
     update  t_mes_data_sum_month sm set(col_17)=(
     select count(*) downline_num from at_downlinerecord at
     where at.duty_name_s ='燃气品质中心' and at.productionline_s in ('L50','L51') and 
     substr(at.stop_date_s,0,10) between  #{startTime} and #{endTime}
     )where trim(sm.shift_group_code) in('RIQC01') and sm.sum_date =to_date(#{queryMonth},'YYYY-MM')
    
    </update>
    
    <!-- 更新MES总和表月组装停线次数 (燃气IQC班组B)-->
    <update id="updateMesDataSumMonthDownQtyRiqcB" parameterType="com.peg.model.bph.MesDataSum">
     update  t_mes_data_sum_month sm set(col_17)=(
     select count(*)from at_downlinerecord at
     where at.duty_name_s ='燃气品质中心' and at.productionline_s in ('L40', 'L41','L42', 'L43', 'L60') and 
     substr(at.stop_date_s,0,10) between  #{startTime} and #{endTime}
     )where trim(sm.shift_group_code) in('RIQC02') and sm.sum_date =to_date(#{queryMonth},'YYYY-MM')

    </update>
    <!-- 更新MES总和表月组装停线次数 (电器IQC班组)-->
    <update id="updateMesDataSumMonthDownQtyDiqc" parameterType="com.peg.model.bph.MesDataSum">
    update  t_mes_data_sum_month sm set(col_17)=(
    select count(*) from at_downlinerecord at
    where at.duty_name_s ='电器品质中心'  and 
    substr(at.stop_date_s,0,10) between  #{startTime} and #{endTime}
    )where trim(sm.shift_group_code) in('DQIQC') and sm.sum_date =to_date(#{queryMonth},'YYYY-MM')
    </update>
    
     <!-- 更新MES总和表天组装停线次数 (燃气IQC班组A)-->
    <update id="updateMesDataSumDayDownQtyRiqcA" parameterType="com.peg.model.bph.MesDataSum">
     update  t_mes_data_sum_day sm set(col_17)=(
     select count(*) downline_num from at_downlinerecord at
     where at.duty_name_s ='燃气品质中心' and at.productionline_s in ('L50','L51') and 
     at.stop_date_s = #{queryDay}
     )where trim(sm.shift_group_code) in('RIQC01') and sm.sum_date =to_date(#{queryDay},'YYYY-MM-DD')
    
    </update>
    
    <!-- 更新MES总和表月组装停线次数 (燃气IQC班组B)-->
    <update id="updateMesDataSumDayDownQtyRiqcB" parameterType="com.peg.model.bph.MesDataSum">
     update  t_mes_data_sum_day sm set(col_17)=(
     select count(*)from at_downlinerecord at
     where at.duty_name_s ='燃气品质中心' and at.productionline_s in ('L40', 'L41','L42', 'L43', 'L60') and 
     at.stop_date_s = #{queryDay}
     )where trim(sm.shift_group_code) in('RIQC02') and sm.sum_date =to_date(#{queryDay},'YYYY-MM-DD')

    </update>
    <!-- 更新MES总和表月组装停线次数 (电器IQC班组)-->
    <update id="updateMesDataSumDayDownQtyDiqc" parameterType="com.peg.model.bph.MesDataSum">
    update  t_mes_data_sum_day sm set(col_17)=(
    select count(*) from at_downlinerecord at
    where at.duty_name_s ='电器品质中心'  and 
    at.stop_date_s = #{queryDay}
    )where trim(sm.shift_group_code) in('DQIQC') and sm.sum_date =to_date(#{queryDay},'YYYY-MM-DD')
    </update>
    
    <!-- 插入qms_data表数据(组装投产数) -->
    <insert id="insertQmsDataAssembly" parameterType="com.peg.model.bph.MesDataSum">
		insert into qms_data
		(
		select u1.factory_name ,u1.finish_date as working_date,u1.area_name ,
		u1.group_desc,null,
		null,null,null,u1.pl_desc,
		null,u1.assemble_finish_qty,null,null
		from
		(
		  select ud.factory_name,ud.area_name,ud.pl_description as pl_desc,ud.group_name as group_desc,
		  to_date(ud.finish_date,'yyyy-mm-dd') as finish_date ,ud.qty as assemble_finish_qty
		  from unit_detail_pline_shift ud
		  where 1=1
		  and substr(ud.finish_date,0,7) = #{queryMonth}
		) u1
    )  
    </insert>
    
    <!-- 插入qms_data表（冲压入库数） -->
    <insert id="insertQmsDataStamping"  parameterType="com.peg.model.bph.MesDataSum">
		insert into qms_data
		(
		select u5.uda_1 as factory_name,to_date(u5.checking_date,'yyyy-mm-dd') as working_date,u5.uda_2 as area_name,
		u5.group_desc,null,null,u5.stamping_finish_qty,null,u5.pl_desc,
		null,null,null,null
		from
		(
		 select pl.uda_1,pl.uda_2,pl.description as pl_desc,ag.description as group_desc,
		 to_char(swcr.checking_time_t,'yyyy-mm-dd') as checking_date,
		 sum(swcr.pass_count_i) as stamping_finish_qty
		 from at_stampingworkcheckingrecord swcr,production_line pl,work_order_items woi,app_group ag
		 where 1=1
		 and swcr.is_last_step_y = 1
		 and swcr.order_item_name_s = woi.order_item
		 and woi.planned_line = pl.p_line_name
		 and ag.description = woi.uda_1
		 and to_char(swcr.checking_time_t,'yyyy-mm') =#{queryMonth}
		 group by pl.uda_1,pl.uda_2,pl.description,ag.description,to_char(swcr.checking_time_t,'yyyy-mm-dd')
		) u5
		)
    </insert>
    <!-- 插入qms_data表（喷涂挂件数） -->
    <insert id="insertQmsDataPainting" parameterType="com.peg.model.bph.MesDataSum">
		 insert into qms_data
		(
		select u5.uda_1 as factory_name,to_date(u5.checking_date,'yyyy-mm-dd') as working_date,u5.uda_2 as area_name,
		u5.group_desc,null,null,null,u5.painting_qty,u5.pl_desc,
		null,null,null,null
		from
		(
		 select pl.uda_1,pl.uda_2,pl.description as pl_desc,ag.description as group_desc,
		 to_char(woi.planned_start_time,'yyyy-mm-dd') as checking_date,
		 sum(pfr.qty_up_i) as painting_qty 
		 from at_paintingfrontrecord pfr,production_line pl,work_order_items woi,app_group ag
		 where 1=1
		 and pfr.order_item_name_s = woi.order_item
		 and woi.planned_line = pl.p_line_name
		 and ag.description = woi.uda_1
		 and to_char(woi.planned_start_time,'yyyy-mm') = #{queryMonth}
		 group by pl.uda_1,pl.uda_2,pl.description,ag.description,to_char(woi.planned_start_time,'yyyy-mm-dd')
		) u5
		)
    </insert>
    
   
  <update id="updateProcessAuditSum" parameterType="com.peg.model.bph.MesDataSum">
      update AT_PROCESSAUDITRECORD_SUM sm set (audit_num)=(
	  select a.audit_num+sm.audit_num from (
	   select FACTORY_S, group_s, stat_month,sum(audit_num) audit_num
	   from (
	  select FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1) group_s,substr(#{param2},0,7) stat_month ,count(FACTORY_S) audit_num
	   from  at_BatchDefectRecord
	   where    RECORD_DATE_T BETWEEN TO_Date(#{param1},'yyyy-MM-DD') and  TO_Date(#{param2},'yyyy-MM-DD')
	             and me_s in('人','机','法','环')
	             and substr(group1_s,0,instr(group1_s,'_',1)-1) in (
	             select a.description from app_group a where category ='SHIFT' 
	             and uda_4 in('组装班组')
	             )
	  group by FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1),substr(#{param2},0,7)
	  
	  union all
	   select FACTORY_S,group2_s group_s,substr(#{param2},0,7) stat_month ,count(FACTORY_S) audit_num
	   from  at_BatchDefectRecord
	   where    RECORD_DATE_T BETWEEN TO_Date(#{param1},'yyyy-MM-DD') and  TO_Date(#{param2},'yyyy-MM-DD')
	             and me_s in('人','机','法','环')
	             and substr(group1_s,0,instr(group1_s,'_',1)-1) in (
	             select a.description from app_group a where category ='SHIFT' 
	             and uda_4 in('组装班组')
	             )
	  group by FACTORY_S,group2_s,substr(#{param2},0,7)
	   
	   union all
	   select FACTORY_S,group3_s group_s,substr(#{param2},0,7) stat_month ,count(FACTORY_S) audit_num
	   from  at_BatchDefectRecord
	   where    RECORD_DATE_T BETWEEN TO_Date(#{param1},'yyyy-MM-DD') and  TO_Date(#{param2},'yyyy-MM-DD')
	             and me_s in('人','机','法','环')
	             and substr(group1_s,0,instr(group1_s,'_',1)-1) in (
	             select a.description from app_group a where category ='SHIFT' 
	             and uda_4 in('组装班组')
	             )
	  group by FACTORY_S,group3_s,substr(#{param2},0,7)                 
	 ) where group_s is not null
	 group by FACTORY_S, group_s, stat_month
	  ) a 
	   where a.group_s = sm.shift_group and a.FACTORY_S = sm.factory and a.stat_month = substr(#{param2},0,7)
	     and sm.monthly = substr(#{param2},0,7)
	 ) where sm.monthly = substr(#{param2},0,7) and sm.check_content in('过程5M1E','盲点测试') 
  </update> 
  
  <!-- t_mes_data_sum_day -->
  
   <!-- 插入MES数据总和表单日 -->
   <delete id="deleteMesDataSumDay"  >
    delete from T_MES_DATA_SUM_DAY trd
    where 1=1 
    <if test="startDay != null and endDay != null" >
        and to_char(trd.sum_date,'YYYY-MM-DD') between #{startDay} and #{endDay}
    </if>
  </delete>
  <insert id="insertMesDataSumDay">    
        insert into  T_MES_DATA_SUM_DAY ( FACTORY, AREA,SHIFT_GROUP_CODE, 
        SHIFT_GROUP_NAME,GROUP_TYPE,SUM_DATE,INSERT_TIME)
        select  a.UDA_1,a.UDA_2,a.GROUP_NAME,a.DESCRIPTION,a.UDA_4,s.s_date,SYSDATE from app_group a ,
        ( select to_date(#{startDay},'yyyy-mm-dd')+(rownum-1) s_date from dual
          connect by rownum &lt;= to_date(#{endDay},'yyyy-mm-dd') - to_date(#{startDay},'yyyy-mm-dd')+1
         ) s
        where a.category='SHIFT' and a.UDA_1 is not null and a.UDA_2 is not null  and a.UDA_4 is not null 
        
  </insert>
  
 
 <!-- 更新MES数据总和表天 生产退次表-->
  <update id="updateMesDataSumDayAssembly" >
     update T_MES_DATA_SUM_DAY sm set ( col_1 ) =  (
     select  return_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s, to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s ='组装'
   
    group by FACTORY_S,DUTY_GROUP1_S,to_char(DATE_T,'yyyy-mm-dd')

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s, to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s ='组装'
           
   group by FACTORY_S,DUTY_GROUP2_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,to_char(DATE_T,'yyyy-mm-dd')stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s ='组装'

   group by FACTORY_S,DUTY_GROUP3_S,to_char(DATE_T,'yyyy-mm-dd')
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
      ) 
     where exists(
      select  return_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s, to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s ='组装'
   
    group by FACTORY_S,DUTY_GROUP1_S,to_char(DATE_T,'yyyy-mm-dd')

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s, to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s ='组装'
           
   group by FACTORY_S,DUTY_GROUP2_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,to_char(DATE_T,'yyyy-mm-dd')stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s ='组装'

   group by FACTORY_S,DUTY_GROUP3_S,to_char(DATE_T,'yyyy-mm-dd')
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
     )  
   
  </update>
  <!-- FQC巡检表 -->
  <update id="updateMesDataSumDayFormer" >
     update T_MES_DATA_SUM_day sm set ( col_3 ,col_4) =  (
 select  defect_qty ,simple_qty  from (
   select FACTORY_S, group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(SIMPLE_QTY) simple_qty
   from (
   select FACTORY_S,GROUP1_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK
     where
             DATE_T BETWEEN TO_Date( #{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
     
   group by FACTORY_S,GROUP1_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,GROUP2_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK 
    where
             DATE_T BETWEEN TO_Date( #{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
  
   group by FACTORY_S,GROUP2_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,GROUP3_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK  
    where
             DATE_T BETWEEN TO_Date( #{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
 
   group by FACTORY_S,GROUP3_S,to_char(DATE_T,'yyyy-mm-dd')
   
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
  ) 
     where exists(
     select  defect_qty ,simple_qty  from (
   select FACTORY_S, group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(SIMPLE_QTY) simple_qty
   from (
   select FACTORY_S,GROUP1_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK
     where
             DATE_T BETWEEN TO_Date( #{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
     
   group by FACTORY_S,GROUP1_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,GROUP2_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK 
    where
             DATE_T BETWEEN TO_Date( #{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
  
   group by FACTORY_S,GROUP2_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,GROUP3_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(simple_qty_i) DEFECT_QTY,sum(total_qty_i) SIMPLE_QTY
   from AT_FORMERPROCESSFQCCHECK  
    where
             DATE_T BETWEEN TO_Date( #{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
 
   group by FACTORY_S,GROUP3_S,to_char(DATE_T,'yyyy-mm-dd')
   
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
     )
  
  </update>
   <!-- 过程审核表 -->
   <update id="updateMesDataSumDayProcess" >
   update T_MES_DATA_SUM_DAY sm set ( col_27 ,col_28,col_29 ,col_30,col_31 ,col_32) =  (
   select  check_type_A ,check_type_B,check_type_C,check_type_D,check_type_E,check_type_F  
   from (
  select FACTORY_S,group_s,to_char(CHECK_DATE_T,'yyyy-mm-dd') stat_month , 
  sum( case when instr(check_type_s,'公司外审') >0 then 1 end) check_type_A,
  sum( case when instr(check_type_s,'公司内审') >0 then 1 end) check_type_B,
  sum( case when instr(check_type_s,'系统内审') >0 then 1 end) check_type_C,
  sum( case when instr(check_type_s,'巡检5M1E') >0 then 1 end) check_type_D,
  sum( case when instr(check_type_s,'工艺纪律检查') >0 then 1 end) check_type_E,
  sum( case when instr(check_type_s,'盲点测试') >0 then 1 end) check_type_F
   from  AT_PROCESSAUDITRECORD
  where CHECK_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
  group by FACTORY_S,GROUP_S,to_char(CHECK_DATE_T,'yyyy-mm-dd')
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month =  to_char(sm.sum_date,'YYYY-MM-DD') ) 
     where exists(
      select  check_type_A ,check_type_B,check_type_C,check_type_D,check_type_E,check_type_F  
   from (
  select FACTORY_S,group_s,to_char(CHECK_DATE_T,'yyyy-mm-dd') stat_month , 
  sum( case when instr(check_type_s,'公司外审') >0 then 1 end) check_type_A,
  sum( case when instr(check_type_s,'公司内审') >0 then 1 end) check_type_B,
  sum( case when instr(check_type_s,'系统内审') >0 then 1 end) check_type_C,
  sum( case when instr(check_type_s,'巡检5M1E') >0 then 1 end) check_type_D,
  sum( case when instr(check_type_s,'工艺纪律检查') >0 then 1 end) check_type_E,
  sum( case when instr(check_type_s,'盲点测试') >0 then 1 end) check_type_F
   from  AT_PROCESSAUDITRECORD
  where CHECK_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
  group by FACTORY_S,GROUP_S,to_char(CHECK_DATE_T,'yyyy-mm-dd')
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month =  to_char(sm.sum_date,'YYYY-MM-DD')
     )  
  </update>
   <!-- 质量改善表 -->
  <update id="updateMesDataSumDayQuality">
     update T_MES_DATA_SUM_Day sm set ( col_9  ) =  (
 select  total_score  from (
 select FACTORY_S,duty_group_s, stat_month,sum(total_score) total_score
   from (
   select FACTORY_S, duty_group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') stat_month ,sum(total_score_I) total_score
   from  AT_QUALITYIMPROVEMENTRFP
     where
             RECORD_DATE_T BETWEEN TO_Date(#{startDay} ,'yyyy-MM-DD') and  TO_Date( #{endDay} ,'yyyy-MM-DD')
   group by FACTORY_S,duty_group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD')

  )where duty_group_s is not null
  group by FACTORY_S,duty_group_s,stat_month  
 ) a 
     where a.duty_group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month= to_char(sm.sum_date,'YYYY-MM-DD')
   ) 
     where exists(
      select  total_score  from (
 select FACTORY_S,duty_group_s, stat_month,sum(total_score) total_score
   from (
   select FACTORY_S, duty_group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') stat_month ,sum(total_score_I) total_score
   from  AT_QUALITYIMPROVEMENTRFP
     where
             RECORD_DATE_T BETWEEN TO_Date(#{startDay} ,'yyyy-MM-DD') and  TO_Date( #{endDay} ,'yyyy-MM-DD')
   group by FACTORY_S,duty_group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD')

  )where duty_group_s is not null
  group by FACTORY_S,duty_group_s,stat_month  
 ) a 
     where a.duty_group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month= to_char(sm.sum_date,'YYYY-MM-DD')
     )
  </update>
   <!-- 5M1E不良记录表 -->
  <update id="updateMesDataSumDayBatch" >
   update T_MES_DATA_SUM_DAY sm set ( col_25 ,col_26) =  (select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
    ) group by FACTORY_S, group_s, stat_month
   ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
   ) 
     where exists(
     select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in (
             select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('冲压班组','点焊班组','喷涂班组','精加工班组','部装班组','电脑板车间')
             )  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
    ) group by FACTORY_S, group_s, stat_month
   ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
     ) 
  
  </update>
    <!-- 5M1E不良记录表(IQC) -->
  <update id="updateMesDataSumDayBatchForIqc" >
     update T_MES_DATA_SUM_DAY sm set ( col_25 ,col_26) =  (select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in ('外协')  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in ('外协')  
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in  ('外协')
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and a.group2_s in  ('外协')
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in ('外协') 
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and a.group3_s in ('外协') 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
    ) group by FACTORY_S, group_s, stat_month
   ) a where a.group_s='外协' and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
   ) 
     where sm.shift_group_name in ( select b.description from app_group b where category ='SHIFT' 
             and b.uda_4 in('IQC')) 
  and exists(
              select  RISK_SCORE_A ,RISK_SCORE_D  
   from (
        select FACTORY_S, group_s, stat_month, sum(RISK_SCORE_A) RISK_SCORE_A, sum(RISK_SCORE_D) RISK_SCORE_D
   from (
       select a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in ('外协')  
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and substr(a.group1_s,0,instr(a.group1_s,'_',1)-1) in ('外协')  
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
   group by a.FACTORY_S,substr(a.group1_s,0,instr(a.group1_s,'_',1)-1),to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all 
   
    select a.FACTORY_S,a.group2_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group2_s in  ('外协')
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and a.group2_s in  ('外协')
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group2_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
   
   union all
   
      select a.FACTORY_S,a.group3_s group_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'A' 
   and a.me_s ='料'
   and a.group3_s in ('外协') 
             THEN   a.RISK_SCORE_F  END ) RISK_SCORE_A ,
   sum(CASE WHEN decode(substr(a.process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')  = 'D' 
   and a.group3_s in ('外协') 
    THEN   a.RISK_SCORE_F  END ) RISK_SCORE_D
   from at_BatchDefectRecord a
   where    a.RECORD_DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by a.FACTORY_S,a.group3_s,to_char(a.RECORD_DATE_T,'YYYY-MM-DD')
    ) group by FACTORY_S, group_s, stat_month
   ) a where a.group_s='外协' and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
             )
  </update>
  
  <!-- 冲压质量日报表 -->
  <update id="updateMesDataSumDayStmp">
   update T_MES_DATA_SUM_DAY sm set ( col_10,col_11 ) =  (select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,to_char(DATE_T,'YYYY-MM-DD') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
             and type_s ='冲压'

   group by FACTORY_S,group_s,to_char(DATE_T,'YYYY-MM-DD')

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-DD')
    )  
     where exists(
     select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,to_char(DATE_T,'YYYY-MM-DD') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay} ,'yyyy-MM-DD')
             and type_s ='冲压'

   group by FACTORY_S,group_s,to_char(DATE_T,'YYYY-MM-DD')

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-DD')
     )
  </update>
  <!-- 喷涂质量日报表 -->
   <update id="updateMesDataSumDayPaint" >

 update T_MES_DATA_SUM_DAY sm set ( col_12,col_13 ) =  (select  quality_qty,total_qty  from  
(
   select FACTORY_S,group_s, stat_month,sum(QUALITY_QTY) QUALITY_QTY,sum(total_qty) total_qty
   from (
   select FACTORY_S, group_s,to_char(DATE_T,'YYYY-MM-DD') stat_month ,sum(QUALITY_QTY_I) QUALITY_QTY,sum(total_qty_i)total_qty
   from  AT_PAINTINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
 
   group by FACTORY_S,group_s,to_char(DATE_T,'YYYY-MM-DD')

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
) a 
     where a.group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
     ) 
     where exists (
     select  a.FACTORY_S,a.group_s, a.stat_month  from  
   (
   select FACTORY_S,group_s, stat_month,sum(QUALITY_QTY) QUALITY_QTY,sum(total_qty) total_qty
   from (
   select FACTORY_S, group_s,to_char(DATE_T,'YYYY-MM-DD') stat_month ,sum(QUALITY_QTY_I) QUALITY_QTY,sum(total_qty_i)total_qty
   from  AT_PAINTINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
 
   group by FACTORY_S,group_s,to_char(DATE_T,'YYYY-MM-DD')

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
  ) a where a.group_s = sm.shift_group_name  and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-dd')
     )
   
  </update>
  <!-- 市场开箱不良记录表 -->
   <update id="updateMesDataSumDayBox">
    update T_MES_DATA_SUM_DAY sm set ( col_19 ,col_20) =  (
   select  open_box_num ,fashion_num
   from (
   select FACTORY_S,group_s,stat_month,sum(open_box_num)open_box_num,sum(fashion_num) fashion_num from(
   select FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1) group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1),to_char(RECORD_DATE_T,'YYYY-MM-DD') 
   
   union all     
    select FACTORY_S,group2_s group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD')  stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group2_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') 
 
   union all
    select FACTORY_S,group3_s group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD')  stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group3_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') 
   ) group by FACTORY_S,group_s,stat_month
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-DD')) 
     where exists(
      select  open_box_num ,fashion_num
   from (
   select FACTORY_S,group_s,stat_month,sum(open_box_num)open_box_num,sum(fashion_num) fashion_num from(
   select FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1) group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,substr(group1_s,0,instr(group1_s,'_',1)-1),to_char(RECORD_DATE_T,'YYYY-MM-DD') 
   
   union all     
    select FACTORY_S,group2_s group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD')  stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group2_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') 
 
   union all
    select FACTORY_S,group3_s group_s,to_char(RECORD_DATE_T,'YYYY-MM-DD')  stat_month ,
    sum( case when defect_source_s='开箱不良' then 1 end) open_box_num,
    sum(case when defect_source_s='流行性不良' then 1 end) fashion_num
   from  AT_BOXDEFECTRECORD
    where  RECORD_DATE_T BETWEEN  TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
   group by FACTORY_S,group3_s,to_char(RECORD_DATE_T,'YYYY-MM-DD') 
   ) group by FACTORY_S,group_s,stat_month
    ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-DD')
     )
  </update>
  
   <!-- 喷涂退次表 -->
   <update id="updateMesDataSumDayPaintingProduct" >
      update T_MES_DATA_SUM_DAY sm set ( col_15,col_23 ) =  (
     select  return_num,total_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num,sum(total_qty) total_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s = '喷涂'
   
    group by FACTORY_S,DUTY_GROUP1_S,to_char(DATE_T,'yyyy-mm-dd')

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s = '喷涂'
           
   group by FACTORY_S,DUTY_GROUP2_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s = '喷涂'

   group by FACTORY_S,DUTY_GROUP3_S,to_char(DATE_T,'yyyy-mm-dd')
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month =  to_char(sm.sum_date,'YYYY-MM-DD')
      ) 
     where exists(
      select  return_num,total_num from 
     (
    select FACTORY_S, group_s, stat_month ,sum(DEFECT_QTY) return_num,sum(total_qty) total_num
    from (
    select FACTORY_S,DUTY_GROUP1_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
    from AT_ASSEMBLYPRODUCTBACK 
    where
    DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
    and type_s = '喷涂'
   
    group by FACTORY_S,DUTY_GROUP1_S,to_char(DATE_T,'yyyy-mm-dd')

    union all

   select FACTORY_S,DUTY_GROUP2_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
           DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
           and type_s = '喷涂'
           
   group by FACTORY_S,DUTY_GROUP2_S,to_char(DATE_T,'yyyy-mm-dd')

   union all

   select FACTORY_S,DUTY_GROUP3_S group_s,to_char(DATE_T,'yyyy-mm-dd') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(total_qty_i) total_qty
   from AT_ASSEMBLYPRODUCTBACK 
    where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s = '喷涂'

   group by FACTORY_S,DUTY_GROUP3_S,to_char(DATE_T,'yyyy-mm-dd')
  ) where group_s is not null
  group by FACTORY_S,group_s,stat_month
  
     )
      a 
     where a.group_s = sm.shift_group_name and  a.FACTORY_S = sm.factory and a.stat_month =  to_char(sm.sum_date,'YYYY-MM-DD')
     )
  </update>
     <!-- 更新MES总和表月组装维修数
    <update id="updateMesDataSumDayAssRepaired" >
	  update  T_MES_DATA_SUM_DAY sm set (col_18) = ( 
	  select repaired_num from (
	  select 
	  w.addr_city factory,       
	  ag.description group_name, 
	  to_char(d.udt_1,'yyyy-mm-dd') stat_month,
	  count(u.serial_number) repaired_num          
	  from  defect_repair_entry d,
	  test_instance t,
	  unit u,
	  work_order w,
	  work_order_items woi,
	  app_group ag
	   where 1=1 
            and d.test_instance_key=t.test_instance_key  
            and t.object_key=u.unit_key 
            and u.order_item_key=woi.order_item_key
            and w.order_key = woi.order_key
            and woi.uda_1=ag.description
            and t.location='在线检验' 
            and t.test_valid='1'
            and d.defect_user_name='组装车间'
            and to_char(d.udt_1,'yyyy-mm-dd') between #{startDay} and #{endDay} 
   group by w.addr_city, ag.description,to_char(d.udt_1,'yyyy-mm-dd')
    ) a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month= to_char(sm.sum_date,'YYYY-MM-DD')   )
     where  exists(
       select factory,group_name,stat_month  from (
	  select 
	  w.addr_city factory,       
	  ag.description group_name, 
	  to_char(d.udt_1,'yyyy-mm-dd') stat_month,
	  count(u.serial_number) repaired_num          
	  from  defect_repair_entry d,
	  test_instance t,
	  unit u,
	  work_order w,
	  work_order_items woi,
	  app_group ag
	   where 1=1 
            and d.test_instance_key=t.test_instance_key  
            and t.object_key=u.unit_key 
            and u.order_item_key=woi.order_item_key
            and w.order_key = woi.order_key
            and woi.uda_1=ag.description
            and t.location='在线检验' 
            and t.test_valid='1'
            and d.defect_user_name='组装车间'
            and to_char(d.udt_1,'yyyy-mm-dd') between #{startDay} and #{endDay} 
   group by w.addr_city, ag.description,to_char(d.udt_1,'yyyy-mm-dd')
    ) a 
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month= to_char(sm.sum_date,'YYYY-MM-DD')
     )
    
    </update>
     -->
     <!-- 更新MES总和表月组装维修数 -->
     <update id="updateMesDataSumDayAssRepaired" statementType="CALLABLE">
        <![CDATA[  
          {call repaired_num_day_proce(#{startDay,mode=IN,jdbcType=VARCHAR},#{endDay,mode=IN,jdbcType=VARCHAR})}  
        ]]>  
     </update>
     
     <!-- 精加工直通率 -->
  <update id="updateMesDataSumDayFinishing">
     update T_MES_DATA_SUM_DAY sm set ( col_21,col_22 ) =  (select  defect_qty,total_qty  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,to_char(DATE_T,'YYYY-MM-DD') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s='精加工'

   group by FACTORY_S,group_s,to_char(DATE_T,'YYYY-MM-DD')

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
     where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-DD') )  
     where exists(
     select  FACTORY_S,group_s, stat_month  from 
 (
   select FACTORY_S,group_s, stat_month,sum(DEFECT_QTY) defect_qty,sum(total_qty)total_qty
   from (
   select FACTORY_S, group_s,to_char(DATE_T,'YYYY-MM-DD') stat_month ,sum(DEFECT_QTY_I) DEFECT_QTY,sum(check_qty_i) total_qty
   from  AT_STAMPINGDAILYREPORT
     where
             DATE_T BETWEEN TO_Date(#{startDay},'yyyy-MM-DD') and  TO_Date(#{endDay},'yyyy-MM-DD')
             and type_s='精加工'

   group by FACTORY_S,group_s,to_char(DATE_T,'YYYY-MM-DD')

  )where group_s is not null
  group by FACTORY_S,group_s,stat_month
 ) a 
 where a.group_s = sm.shift_group_name and a.FACTORY_S = sm.factory and a.stat_month = to_char(sm.sum_date,'YYYY-MM-DD') ) 
   
  </update>
   <!-- IPQC巡检表 -->
  <update id="updateMesDataSumDayInspects" >
    update  T_MES_DATA_SUM_DAY sm set (col_5,col_6,col_7,col_8) = ( 
    select DEFECT_QTY,CHECK_QTY,risk_score_A,risk_score_D from (
    select FACTORY_S, group_s, stat_month, sum(risk_score_A) risk_score_A, sum(risk_score_D) risk_score_D,
    sum(CHECK_QTY) CHECK_QTY, sum(DEFECT_QTY) DEFECT_QTY from (
    select FACTORY_S,group1_s group_s,substr(find_time_s,0,10) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
  where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
   
   group by FACTORY_S,group1_s,substr(find_time_s,0,10)

   union all

    select FACTORY_S,group2_s group_s,substr(find_time_s,0,10) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
   where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'

   group by FACTORY_S,group2_s,substr(find_time_s,0,10) 

   union all

   select FACTORY_S,group3_s group_s,substr(find_time_s,0,10)  stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
    where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
    
   group by FACTORY_S,group3_s,substr(find_time_s,0,10) 
   ) group by FACTORY_S,group_s, stat_month
   ) a
      where a.FACTORY_S = sm.factory and a.group_s = sm.shift_group_name and a.stat_month= to_char(sm.sum_date,'YYYY-MM-DD')  )
    where  exists(
      select FACTORY_S, group_s, stat_month from (
    select FACTORY_S, group_s, stat_month, sum(risk_score_A) risk_score_A, sum(risk_score_D) risk_score_D,
    sum(CHECK_QTY) CHECK_QTY, sum(DEFECT_QTY) DEFECT_QTY from (
    select FACTORY_S,group1_s group_s,substr(find_time_s,0,10) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
  where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
   
   group by FACTORY_S,group1_s,substr(find_time_s,0,10)

   union all

    select FACTORY_S,group2_s group_s,substr(find_time_s,0,10) stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
   where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'

   group by FACTORY_S,group2_s,substr(find_time_s,0,10) 

   union all

   select FACTORY_S,group3_s group_s,substr(find_time_s,0,10)  stat_month ,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='A' then RISK_SCORE_F end) risk_score_A,
    sum(case when decode(substr(process_node_s,1,1),'A','A','B','A','C','A','D','D',' ')='D' 
    and feeding_qty_i >= 100 and unquantity_qty_i/feeding_qty_i >=0.2 then 1 end ) risk_score_D,
    sum(CHECKQTY_I) CHECK_QTY ,sum(DEFECTQTY_I) DEFECT_QTY
   from  at_inspects
    where
            substr(find_time_s,0,10) BETWEEN #{startDay} and #{endDay}
            and inspect_type_s='前工序'
    
   group by FACTORY_S,group3_s,substr(find_time_s,0,10) 
   ) group by FACTORY_S,group_s, stat_month
   ) a
      where a.FACTORY_S = sm.factory and a.group_s = sm.shift_group_name and a.stat_month= to_char(sm.sum_date,'YYYY-MM-DD') 
    )
  
  </update>
  <!-- 更新组装投产数 -->
   <update id="updateMesDataSumDayQmsData" parameterType="com.peg.model.bph.MesDataSum">
     update T_MES_DATA_SUM_DAY sm set ( col_2  )
  =  (select  assemble_finish_qty from (  select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)) a 
  where a.group_name = sm.shift_group_name  and a.factory_name = sm.factory
  and a.area_name = sm.area  and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD') )
  where  exists(
     select  factory_name,area_name,group_name from (  select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)) a 
  where a.group_name = sm.shift_group_name  and a.factory_name = sm.factory
  and a.area_name = sm.area  and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
  )    
  </update>
  <!-- 从qms_data_month更新MES总和表月度组装投产数_电器冲压 -->
   <update id="updateMesDataSumDayQmsAssDStamp" parameterType="com.peg.model.bph.MesDataSum">
      update  t_mes_data_sum_day sm set(col_2)=(
      select sum(assemble_finish_qty) from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='电器一厂' and
     a.area_name='组装车间' and instr(a.group_name,'油烟机')>0 
     and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
     group by a.finish_date
     )where  sm.shift_group_code in(
     select a.group_name from app_group a where a.category='SHIFT' 
     and a.uda_4 in('冲压班组','喷涂班组','精加工班组','点焊班组','部装班组')
     and a.uda_1 ='电器一厂'
     ) and exists(
      select finish_date,sum(assemble_finish_qty) from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='电器一厂' and
     a.area_name='组装车间' and instr(a.group_name,'油烟机')>0 
     and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
     group by a.finish_date
     )
   </update>
    <!-- 燃气冲压A -->
    <update id="updateMesDataSumDayQmsAssRStampA" parameterType="com.peg.model.bph.MesDataSum">
       update  t_mes_data_sum_DAY sm set(col_2)=(
     select assemble_finish_qty from (
      select finish_date,sum(assemble_finish_qty) assemble_finish_qty from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='燃气工厂' and
      a.area_name='组装车间' and a.group_name in('L50A组','L51A组') 
      group by a.finish_date)b 
      where  b.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
    )where sm.shift_group_code in('RCY01') 
     and exists(
     select b.finish_date from(
       select finish_date from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='燃气工厂' and
     a.area_name='组装车间' and a.group_name in('L50A组','L51A组') 
      group by a.finish_date)b
      where b.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
     )
   </update>
   
    <!-- 燃气冲压B -->
   <update id="updateMesDataSumDayQmsAssRStampB" parameterType="com.peg.model.bph.MesDataSum">
         update  t_mes_data_sum_day sm set(col_2)=(
       select sum(assemble_finish_qty) from (
       select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)) 
      a where a.factory_name='燃气工厂' and
      a.area_name='组装车间'  
      and a.group_name in('L40A组', 'L41A组','L42A组', 'L43A组', 'L44A组')  
      and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
      group by a.finish_date
      )where sm.shift_group_code in('RCY02') 
      and exists(
       select finish_date,sum(assemble_finish_qty) from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay}  and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='燃气工厂' and
      a.area_name='组装车间'  
      and a.group_name in('L40A组', 'L41A组','L42A组', 'L43A组', 'L44A组')  
      and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
      group by a.finish_date
      )
   </update>
     <!-- 燃气喷涂,点焊 -->
   <update id="updateMesDataSumDayQmsAssRSpay" parameterType="com.peg.model.bph.MesDataSum">
             update  t_mes_data_sum_day sm set(col_2)=(
       select sum(assemble_finish_qty) from (
       select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)) 
      a where a.factory_name='燃气工厂' and
      a.area_name='组装车间' and a.group_name in('L40A组', 'L41A组','L42A组', 'L43A组', 'L44A组','L50A组','L51A组') 
      and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
      group by a.finish_date
       )where sm.shift_group_code in(
        select a.group_name from app_group a where a.category='SHIFT' 
        and a.uda_4 in('喷涂班组','精加工班组','点焊班组')
        and a.uda_1 ='燃气工厂'
       ) and exists(
       select finish_date,sum(assemble_finish_qty) from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay} and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='燃气工厂' and
      a.area_name='组装车间' and a.group_name in('L40A组', 'L41A组','L42A组', 'L43A组', 'L44A组','L50A组','L51A组') 
      and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
      group by a.finish_date
      )
   </update>
    <!-- 从qms_data_month更新MES总和表月度组装投产数_电脑版车间 -->
   <update id="updateMesDataSumDayQmsAssDComputer" parameterType="com.peg.model.bph.MesDataSum">
    update  t_mes_data_sum_day sm set(col_2)=(
       select sum(assemble_finish_qty) from (
       select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay}  and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
       ) a where a.factory_name='电器一厂' and
     a.area_name='组装车间' and instr(group_name,'消毒柜')>0  
     and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
      group by a.finish_date
     )where sm.shift_group_code in(
     select a.group_name from app_group a where a.category='SHIFT' 
     and a.uda_4 in('电脑板车间')
     and a.uda_1 ='电器一厂'
     ) and exists(
       select finish_date,sum(assemble_finish_qty) from (
      select ud.factory_name,ud.area_name,ud.group_name ,
      substr(ud.finish_date,0,10) as finish_date ,sum(ud.qty) as assemble_finish_qty
      from unit_detail_pline_shift ud
      where 1=1
      and substr(ud.finish_date,0,10) between #{startDay}  and #{endDay}
      group by ud.factory_name,ud.area_name,ud.group_name,substr(ud.finish_date,0,10)
     ) a where a.factory_name='电器一厂' and
     a.area_name='组装车间' and instr(group_name,'消毒柜')>0  
     and a.finish_date = to_char(sm.sum_date,'YYYY-MM-DD')
      group by a.finish_date
      )
   
   </update>
   
    <!-- 更新MES总和表月OQC抽检不良台数 
    <update id="updateMesDataSumDayOqcDedectQty" parameterType="com.peg.model.bph.MesDataSum">
         update  T_MES_DATA_SUM_DAY sm set (col_16) = ( 
      select defect_num from (
        select p.uda_1 factory, to_char(t.creation_time,'YYYY-MM-DD') stat_month, substr(t.uda_5,0,instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num  
   from  test_instance t,app_group p
   where 1=1
             and substr(t.uda_5,0,instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay}  and #{endDay}
             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, to_char(t.creation_time,'YYYY-MM-DD'), substr(t.uda_5,0,instr(t.uda_5||',',',')-1)
   
   union all
   
   select  p.uda_1 factory, to_char(t.creation_time,'YYYY-MM-DD') stat_month,substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num 
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD')between #{startDay}  and #{endDay}

             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by p.uda_1, to_char(t.creation_time,'YYYY-MM-DD'),substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1)
   
   union all
   
      select p.uda_1 factory, to_char(t.creation_time,'YYYY-MM-DD') stat_month,substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1) group_name,
   count(t.test_instance_key) defect_num
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)= p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay}  and #{endDay}

             and  t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, to_char(t.creation_time,'YYYY-MM-DD'),
   substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)
      ) a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month=  to_char(sm.sum_date,'YYYY-MM-DD') )
      where exists(
        select defect_num from (
        select p.uda_1 factory, to_char(t.creation_time,'YYYY-MM-DD') stat_month, substr(t.uda_5,0,instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num  
   from  test_instance t,app_group p
   where 1=1
             and substr(t.uda_5,0,instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay}  and #{endDay}
             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, to_char(t.creation_time,'YYYY-MM-DD'), substr(t.uda_5,0,instr(t.uda_5||',',',')-1)
   
   union all
   
   select  p.uda_1 factory, to_char(t.creation_time,'YYYY-MM-DD') stat_month,substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) group_name,
   count(t.test_instance_key) defect_num 
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1) = p.description
             and to_char(t.creation_time,'YYYY-MM-DD')between #{startDay}  and #{endDay}

             and t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by p.uda_1, to_char(t.creation_time,'YYYY-MM-DD'),substr(t.uda_5,instr(t.uda_5,',')+1,instr(t.uda_5||',',',',1,2)-instr(t.uda_5||',',',')-1)
   
   union all
   
      select p.uda_1 factory, to_char(t.creation_time,'YYYY-MM-DD') stat_month,substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1) group_name,
   count(t.test_instance_key) defect_num
   from  test_instance t,app_group p
   where 1=1 
             and substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)= p.description
             and to_char(t.creation_time,'YYYY-MM-DD') between #{startDay}  and #{endDay}

             and  t.uda_7='OQC单独抽检'
             and t.test_passed=0
             and t.uda_5 is not null
   group by  p.uda_1, to_char(t.creation_time,'YYYY-MM-DD'),
   substr(t.uda_5,instr(t.uda_5,',',1,2)+1,instr(t.uda_5||',',',',1,3)-instr(t.uda_5||',',',',1,2)-1)
      ) a
      where a.factory = sm.factory and a.group_name = sm.shift_group_name and a.stat_month=  to_char(sm.sum_date,'YYYY-MM-DD') 
      )
      
    </update>
     -->
      <!-- 更新MES总和表月OQC抽检不良台数 -->
     <update id="updateMesDataSumDayOqcDedectQty" statementType="CALLABLE">
        <![CDATA[  
          {call oqcdefect_num_day_proce(#{startDay,mode=IN,jdbcType=VARCHAR},#{endDay,mode=IN,jdbcType=VARCHAR})}  
        ]]>  
     </update>
    
</mapper>